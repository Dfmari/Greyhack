//command: devinf
//returns info about device on chosen lan ip of given ip
metax = include_lib("/lib/metaxploit.so")
if (not metax) then
  metax = include_lib(current_path + "/metaxploit.so")
else if (not metax) then
  exit("Error: metaxploit library not found in /lib folder or current path")
end if

if params.len == 0 or params[0] == "-h" then
  exit("<b>Usage:</b> devinf [ip address] opt[port]")
end if

ipAddr = params[0]

//nmap for nice look
nmap = function(ipAddress)
isLanIp = is_lan_ip( ipAddress )

if isLanIp then
   router = get_router
else 
   router = get_router( ipAddress )
end if

if router == null then exit("Error: ip address not found")
ports = null

if not isLanIp then
   ports = router.used_ports
else
   ports = router.device_ports(ipAddress)
end if

if ports == null then exit("Error: ip address not found")
if typeof(ports) == "string" then exit(ports)
      
info = "INDEX PORT STATE SERVICE VERSION LAN"   
if(ports.len == 0) then 
  print "No open ports. Getting info on router"  
  return 0
end if

info = info + "\n" + "0: 0(router) open kerne_router " + router.kernel_version + " " + router.local_ip

index = 1
for port in ports
   service_info = router.port_info(port)
   lan_ips = port.get_lan_ip
   port_status = "open"

   if(port.is_closed and not isLanIp) then
      port_status = "closed"
   end if
   info = info + "\n" + index + ": " + port.port_number + " " + port_status + " " + service_info + " " + lan_ips
  index = index + 1
end for
return [format_columns(info) + "\n", ports]
end function

//main programm
if params.len ==  2 then
  port_num = params[1]
else if nmap(ipAddr) == 0 then
  port_num = 0
else
  inputOK = false
  while inputOK == false
    print nmap(ipAddr)[0]
    pindex = user_input("choose LAN IP:").to_int
    if pindex <= nmap(ipAddr)[1].len then 
      port_num = nmap(ipAddr)[1][pindex - 1].port_number
      inputOK = true
    else
      print "Index not found"
    end if
  end while
end if

print(whois(ipAddr))
print("Public IP: " + ipAddr)
print("Local IP: " + nmap(ipAddr)[1][pindex - 1].get_lan_ip)
session = metax.net_use(ipAddr, port_num)
print "Gateway devices: " + session.get_num_conn_gateway
print "Ports forwarded: " + session.get_num_portforward
print "User Accounts: " + session.get_num_users
if session.is_root_active_user then
  print "Active user: Root"
else if session.is_any_active_user then
  print "Active user: Non-Root"
else 
  print "Active user: None"
end if